diff --git a/jaxlib_build_backend.py b/jaxlib_build_backend.py
new file mode 100644
index 0000000..3727f7e
--- /dev/null
+++ b/jaxlib_build_backend.py
@@ -0,0 +1,39 @@
+import os
+import re
+import sys
+import tarfile
+import subprocess
+import tempfile
+import shutil
+from pathlib import Path
+
+
+def build_sdist(sdist_directory, config_settings=None):
+    nv = 'jaxlib-0.4.13'
+    srcdir = Path(__file__).parent
+    archive_path = Path(sdist_directory) / f'{nv}.tar.gz'
+
+    def tarfilter(info):
+        if re.match(r'\./(?:.git|bazel-|venv|[^-/]+-venv)', info.name):
+            return None
+        info.name = f'./{nv}/{info.name}'
+        return info
+
+    with tarfile.open(archive_path, 'w:gz') as tar:
+        tar.add('.', filter=tarfilter)
+    return archive_path.name
+
+
+def build_wheel(wheel_directory, config_settings=None, metadata_directory=None):
+    with tempfile.TemporaryDirectory() as d:
+        cmd = [sys.executable, 'build/build.py', '--output_path', d]
+        if num_jobs := os.environ.get('CORE_COUNT'):
+            cmd += [f'--bazel_options=--jobs={num_jobs}']
+        if max_mem := os.environ.get('MAX_MEMORY_GB'):
+            cmd += [f'--bazel_options=--local_ram_resources={int(max_mem) * 1024}']
+        subprocess.run(cmd, check=True)
+        wheels = list(Path(d).glob('*.whl'))
+        assert len(wheels) == 1, f"Expected 1 wheel, found {len(wheels)}"
+        wheel = wheels[0]
+        shutil.copyfile(wheel, Path(wheel_directory) / wheel.name)
+        return str(wheel.name)
diff --git a/pyproject.toml b/pyproject.toml
index eb3eb4c..5876c7b 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,6 +1,7 @@
 [build-system]
-requires = ["setuptools", "wheel"]
-build-backend = "setuptools.build_meta"
+requires = ["setuptools", "wheel", "oldest-supported-numpy"]
+build-backend = "jaxlib_build_backend"
+backend-path = ["."]
 
 [tool.mypy]
 show_error_codes = true
